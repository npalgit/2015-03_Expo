<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hdc="http://schemas.hdcrd.com/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="SwitchButtonStyle1"
           TargetType="{x:Type hdc:SwitchButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type hdc:SwitchButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SwitchStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="activeLayer">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
<!--                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"-->
<!--                                                                       Storyboard.TargetName="contentPresenter">-->
<!--                                            <EasingDoubleKeyFrame KeyTime="0"-->
<!--                                                                  Value="1" />-->
<!--                                        </DoubleAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Deactive">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="activeLayer">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
<!--                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"-->
<!--                                                                       Storyboard.TargetName="contentPresenter">-->
<!--                                            <EasingDoubleKeyFrame KeyTime="0"-->
<!--                                                                  Value="1" />-->
<!--                                        </DoubleAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="pressedLayer">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                d:LayoutOverrides="Width, Height"
                                Background="{TemplateBinding Background}" />
                        <Border x:Name="activeLayer"
                                BorderBrush="{DynamicResource {x:Static hdc:HdcBrushes.AccentBrushKey}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0"
                                Background="{DynamicResource {x:Static hdc:HdcBrushes.AccentBrushKey}}" />
                        <Border x:Name="contentLayer"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter x:Name="contentPresenter"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Opacity="1" />
                            </Grid>
                        </Border>
                        <Border x:Name="pressedLayer"
                                BorderBrush="Black"
                                Opacity="0"
                                Background="{DynamicResource {x:Static hdc:HdcBrushes.AccentBrushKey}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.BackgroundBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.BorderBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.ForegroundBrushKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static hdc:HdcFonts.FontSizeMediumKey}}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.ControlBrushKey}}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
    </Style>
    <Style x:Key="SwitchButtonStyle2"
           TargetType="{x:Type hdc:SwitchButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type hdc:SwitchButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SwitchStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="activeLayer">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="textBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="textBlock1">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)"
                                                                       Storyboard.TargetName="activeLayer">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF1BA1E2" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Deactive">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="activeLayer">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates" />
                            <VisualStateGroup x:Name="ValidationStates" />
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                d:LayoutOverrides="Width, Height"
                                Background="{TemplateBinding Background}" />
                        <Border x:Name="activeLayer"
                                BorderBrush="{DynamicResource {x:Static hdc:HdcBrushes.AccentBrushKey}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0"
                                Background="{DynamicResource {x:Static hdc:HdcBrushes.AccentBrushKey}}" />
                        <Border x:Name="contentLayer"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ContentPresenter RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <TextBlock x:Name="textBlock"
                                           HorizontalAlignment="Center"
                                           TextWrapping="Wrap"
                                           VerticalAlignment="Center"
                                           TextAlignment="Center"
                                           FontSize="29.333"
                                           Text="开"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <TextBlock x:Name="textBlock1"
                                   HorizontalAlignment="Center"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center"
                                   FontSize="29.333"><Run Language="zh-cn"
                                                          Text="关" /></TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.BackgroundBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.BorderBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.ForegroundBrushKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static hdc:HdcFonts.FontSizeMediumKey}}" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static hdc:HdcBrushes.ControlBrushKey}}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
    </Style>

</ResourceDictionary>